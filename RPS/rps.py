# -*- coding: utf-8 -*-
"""RPS.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/12-WKJria1RhdUrtBh65AHp7TyM7F9b8k
"""

def player(prev_play, opponent_history=[]):
    if prev_play:
        opponent_history.append(prev_play)
    N = 3
    if len(opponent_history) < N:
        return "R"

    pattern = "".join(opponent_history[-N:])
    possible_patterns = {}
    for i in range(len(opponent_history) - N):
        key = "".join(opponent_history[i:i+N])
        next_move = opponent_history[i+N]
        if key == pattern:
            if next_move not in possible_patterns:
                possible_patterns[next_move] = 1
            else:
                possible_patterns[next_move] += 1

    if possible_patterns:
        predicted_move = max(possible_patterns, key=possible_patterns.get)
    else:
        predicted_move = opponent_history[-1]
    counter = {"R": "P", "P": "S", "S": "R"}
    return counter[predicted_move]

